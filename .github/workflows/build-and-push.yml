name: Build and Push Docker Image

on:
  push:
    branches:
      - main  # Trigger on push to main branch
    paths:
      - 'Dockerfile'        # Trigger if Dockerfile is changed
      - 'pom.xml'           # Trigger if pom.xml is changed
      - 'src/**'             # Trigger if any file under src/ is changed
  pull_request:
    branches:
      - main  # Trigger on pull request to main branch
    paths:
      - 'Dockerfile'        # Trigger if Dockerfile is changed
      - 'pom.xml'           # Trigger if pom.xml is changed
      - 'src/**'             # Trigger if any file under src/ is changed
  workflow_dispatch:    # This enables manual triggering
    inputs:
      tag:
        description: 'Tag for the image'  # Optional input
        required: true
        default: 'latest'

jobs:
  build:
    runs-on: ubuntu-latest  # The OS to run the job

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to Azure Container Registry using secrets
      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: usecasecr.azurecr.io  # Hardcoded ACR login server
          username: ${{ secrets.ACR_USERNAME }}  # Using ACR username from secrets
          password: ${{ secrets.ACR_PASSWORD }}  # Using ACR password from secrets

      # Step 4: Build the Docker image
      - name: Build the Docker image
        run: |
          docker build -t usecasecr.azurecr.io/my-java-app:${{ github.event.inputs.tag }} .

      # Step 5: Push the Docker image to Azure Container Registry
      - name: Push the Docker image
        run: |
          docker push usecasecr.azurecr.io/my-java-app:${{ github.event.inputs.tag }}
