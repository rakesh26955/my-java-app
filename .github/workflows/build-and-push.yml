name: Build and Push Docker Image

on:
  push:
    branches:
      - main  # Trigger on push to main branch
    paths:
      - 'Dockerfile'        # Trigger if Dockerfile is changed
      - 'pom.xml'           # Trigger if pom.xml is changed
      - 'src/**'             # Trigger if any file under src/ is changed
  pull_request:
    branches:
      - main  # Trigger on pull request to main branch
    paths:
      - 'Dockerfile'        # Trigger if Dockerfile is changed
      - 'pom.xml'           # Trigger if pom.xml is changed
      - 'src/**'             # Trigger if any file under src/ is changed
  workflow_dispatch:    # This enables manual triggering
    inputs:
      tag:
        description: 'Tag for the image'  # Optional input
        required: true
        default: 'latest'

jobs:
  build:
    runs-on: ubuntu-latest  # The OS to run the job

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Set environment variables for Azure Container Registry
      - name: Set environment variables for ACR login
        run: |
          echo "AZURE_ACR_LOGIN_SERVER=${{ secrets.AZURE_ACR_LOGIN_SERVER }}" >> $GITHUB_ENV
          echo "AZURE_USERNAME=${{ secrets.azure_username }}" >> $GITHUB_ENV
          echo "AZURE_PASSWORD=${{ secrets.azure_password }}" >> $GITHUB_ENV

      # Step 4: Log in to Azure Container Registry using the environment variables
      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.AZURE_ACR_LOGIN_SERVER }}  # ACR login server from env variable
          username: ${{ env.AZURE_USERNAME }}  # ACR username from env variable
          password: ${{ env.AZURE_PASSWORD }}  # ACR password from env variable

      # Step 5: Build the Docker image with a unique version tag based on commit SHA
      - name: Build the Docker image
        run: |
          IMAGE_TAG=${{ github.sha }}  # Use commit SHA as the version tag
          echo "Building image with tag $IMAGE_TAG"
          docker build -t ${{ env.AZURE_ACR_LOGIN_SERVER }}/my-java-app:$IMAGE_TAG .

      # Step 6: Push the Docker image to Azure Container Registry
      - name: Push the Docker image
        run: |
          IMAGE_TAG=${{ github.sha }}  # Use commit SHA as the version tag
          echo "Pushing image with tag $IMAGE_TAG"
          docker push ${{ env.AZURE_ACR_LOGIN_SERVER }}/my-java-app:$IMAGE_TAG

      # Step 7: Optionally, also tag the image as 'latest' for convenience (overwriting the previous 'latest' image)
      - name: Tag and push image as latest
        run: |
          IMAGE_TAG=${{ github.sha }}
          echo "Tagging image as 'latest'"
          docker tag ${{ env.AZURE_ACR_LOGIN_SERVER }}/my-java-app:$IMAGE_TAG ${{ env.AZURE_ACR_LOGIN_SERVER }}/my-java-app:latest
          docker push ${{ env.AZURE_ACR_LOGIN_SERVER }}/my-java-app:latest
